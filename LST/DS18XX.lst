C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS18XX
OBJECT MODULE PLACED IN .\HEX\DS18XX.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DS18XX.c BROWSE DEBUG OBJECTEXTEND CODE SYMBOLS PRINT(.\LST\DS18XX.lst) TAB
                    -S(2) OBJECT(.\HEX\DS18XX.obj)

line level    source

   1          #include <reg51.h>
   2          #include <INTRINS.H>
   3          #include "ds18xx.h"
   4          
   5          sbit DS18XX_DQ = P3^7;  //1-wire 通訊接腳
   6          
   7          void ResetPresence(void);
   8          void DelayUs(unsigned char);
   9          unsigned char SendReceiveByte(unsigned char);
  10          bit SendReceiveBit(bit);
  11          
  12          /*==========================================
  13            初始 DS18XX 溫度晶體
  14          ==========================================*/
  15          void InitDS18XX(void)
  16          {
  17   1        // 在此加初始設定
  18   1        DS18XX_DQ = 1;  //DQ 腳輸出高電位
  19   1      }
  20            
  21          /*==========================================
  22            開始溫度/數位轉換
  23          ==========================================*/
  24          void StartConvertTemperature(void)
  25          {
  26   1        ResetPresence();  //起始 1-wire bus
  27   1        SendReceiveByte(0xcc);  //跳過讀序列號的操作
  28   1        SendReceiveByte(0x44);  //啟動溫度轉換
  29   1      }
  30          
  31          /*==========================================
  32            讀取溫度值
  33            輸出：溫度值
  34          ==========================================*/
  35          unsigned char ReadTemperature(void)
  36          {
  37   1        unsigned char tempL=0; 
  38   1        unsigned char tempH=0; 
  39   1        ResetPresence();  //起始 1-wire bus
  40   1        SendReceiveByte(0xcc);  //跳過讀序列號的操作
  41   1        SendReceiveByte(0xbe);  //讀溫度暫存器（頭兩個值分別為溫度的低位元和高位）
  42   1        
  43   1        tempL = SendReceiveByte(0xff);  //讀出溫度的低位元組
  44   1        tempH = SendReceiveByte(0xff);  //讀出溫度的高位元組
  45   1        
  46   1        tempL >>= 4;
  47   1        tempH <<= 4;
  48   1        tempL += tempH;
  49   1        if(tempL >= 80)
  50   1          tempL = 0;
  51   1          
  52   1        return(tempL);  //傳回溫度值
  53   1      }
  54          
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 2   

  55          /*==========================================
  56            傳送/接收 8 位元
  57            輸入：要傳送的位元組
  58            輸出：接收到的位元組
  59          ==========================================*/
  60          unsigned char SendReceiveByte(unsigned char dat)
  61          {
  62   1        unsigned char cnt;
  63   1        bit rbit;
  64   1      
  65   1        for(cnt = 0; cnt < 8; cnt++)  //8位元傳送接收迴路
  66   1        {
  67   2          rbit = SendReceiveBit(dat & 1); //LSB(bit0) 先傳
  68   2          dat >>= 1;  //右移1位元
  69   2          
  70   2          if(rbit)
  71   2            dat |= 0x80;  //將收到的位元值放到MSB(bit7)
  72   2        }
  73   1        
  74   1        return(dat);  //傳回資料
  75   1      }
  76            
  77          /*========================================
  78            傳送/接收 1 位元
  79            輸入：傳送的位元
  80            輸出：接收的位元
  81          ========================================*/
  82          bit SendReceiveBit(bit bdat)
  83          {
  84   1        unsigned char dly;
  85   1        
  86   1        DS18XX_DQ = 0;  //DQ 腳輸出低電位
  87   1        _nop_();
  88   1        _nop_();
  89   1        _nop_();
  90   1        _nop_();
  91   1        DS18XX_DQ = bdat; //傳送 1 位元資料
  92   1        _nop_();
  93   1        _nop_();
  94   1        _nop_();
  95   1        _nop_();
  96   1        _nop_();
  97   1        _nop_();
  98   1        bdat = DS18XX_DQ; //接收 1 位元資料
  99   1        
 100   1        for(dly = 0; dly < 12; dly++);  //延遲迴路
 101   1        
 102   1        DS18XX_DQ = 1;  //DQ 腳輸出高電位
 103   1        
 104   1        return(bdat); //傳回接收的位元
 105   1      }
 106          
 107          /*==========================================
 108            起始 1-wire bus 傳輸功能
 109            保持 DQ 低電位 480us < RST_low < 960us
 110          ==========================================*/
 111          void ResetPresence(void)
 112          {
 113   1        // 送出 Reset 脈衝
 114   1        DS18XX_DQ = 0;  //DQ 腳輸出低電位
 115   1        // 延遲 480-960 us
 116   1        DelayUs(70);
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 3   

 117   1        DS18XX_DQ = 1;  //DQ 腳輸出高電位
 118   1        // 等待 DS1821 回應 PRESENCE 脈衝
 119   1        // 延遲 15-60us
 120   1        DelayUs(3);
 121   1        while(DS18XX_DQ); //等待 DS18XX 回應 Low
 122   1        while(!DS18XX_DQ);  //等待 DS18XX 回應 High
 123   1      }
 124            
 125          /*=====================================[]
 126            input : us delay
 127          =====================================*/
 128          void DelayUs(unsigned char us)
 129          {
 130   1        for(;us != 0; us--) //延遲迴路
 131   1        {
 132   2          _nop_();
 133   2          _nop_();
 134   2          _nop_();
 135   2          _nop_();
 136   2          _nop_();
 137   2          _nop_();
 138   2          _nop_();
 139   2          _nop_();
 140   2        }
 141   1      }
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION InitDS18XX (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 18
0000 D2B7              SETB    DS18XX_DQ
                                           ; SOURCE LINE # 19
0002 22                RET     
             ; FUNCTION InitDS18XX (END)

             ; FUNCTION StartConvertTemperature (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 120000      R     LCALL   ResetPresence
                                           ; SOURCE LINE # 27
0003 7FCC              MOV     R7,#0CCH
0005 120000      R     LCALL   _SendReceiveByte
                                           ; SOURCE LINE # 28
0008 7F44              MOV     R7,#044H
000A 020000      R     LJMP    _SendReceiveByte
             ; FUNCTION StartConvertTemperature (END)

             ; FUNCTION ReadTemperature (BEGIN)
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0000 E4                CLR     A
0001 F500        R     MOV     tempL,A
                                           ; SOURCE LINE # 38
;---- Variable 'tempH' assigned to Register 'R7' ----
0003 FF                MOV     R7,A
                                           ; SOURCE LINE # 39
0004 120000      R     LCALL   ResetPresence
                                           ; SOURCE LINE # 40
0007 7FCC              MOV     R7,#0CCH
0009 120000      R     LCALL   _SendReceiveByte
                                           ; SOURCE LINE # 41
000C 7FBE              MOV     R7,#0BEH
000E 120000      R     LCALL   _SendReceiveByte
                                           ; SOURCE LINE # 43
0011 7FFF              MOV     R7,#0FFH
0013 120000      R     LCALL   _SendReceiveByte
0016 8F00        R     MOV     tempL,R7
                                           ; SOURCE LINE # 44
0018 7FFF              MOV     R7,#0FFH
001A 120000      R     LCALL   _SendReceiveByte
                                           ; SOURCE LINE # 46
001D E500        R     MOV     A,tempL
001F C4                SWAP    A
0020 540F              ANL     A,#0FH
0022 F500        R     MOV     tempL,A
                                           ; SOURCE LINE # 47
0024 EF                MOV     A,R7
0025 C4                SWAP    A
0026 54F0              ANL     A,#0F0H
                                           ; SOURCE LINE # 48
0028 2500        R     ADD     A,tempL
002A F500        R     MOV     tempL,A
                                           ; SOURCE LINE # 49
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 5   

002C C3                CLR     C
002D 9450              SUBB    A,#050H
002F 4003              JC      ?C0003
                                           ; SOURCE LINE # 50
0031 E4                CLR     A
0032 F500        R     MOV     tempL,A
0034         ?C0003:
                                           ; SOURCE LINE # 52
0034 AF00        R     MOV     R7,tempL
                                           ; SOURCE LINE # 53
0036         ?C0004:
0036 22                RET     
             ; FUNCTION ReadTemperature (END)

             ; FUNCTION _SendReceiveByte (BEGIN)
                                           ; SOURCE LINE # 60
0000 8F00        R     MOV     dat,R7
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 65
0002 E4                CLR     A
0003 F500        R     MOV     cnt,A
0005         ?C0005:
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0005 E500        R     MOV     A,dat
0007 13                RRC     A
0008 9200        R     MOV     ?SendReceiveBit?BIT,C
000A 120000      R     LCALL   SendReceiveBit
000D 9200        R     MOV     rbit,C
                                           ; SOURCE LINE # 68
000F E500        R     MOV     A,dat
0011 C3                CLR     C
0012 13                RRC     A
0013 F500        R     MOV     dat,A
                                           ; SOURCE LINE # 70
0015 300003      R     JNB     rbit,?C0007
                                           ; SOURCE LINE # 71
0018 430080      R     ORL     dat,#080H
                                           ; SOURCE LINE # 72
001B         ?C0007:
001B 0500        R     INC     cnt
001D E500        R     MOV     A,cnt
001F C3                CLR     C
0020 9408              SUBB    A,#08H
0022 40E1              JC      ?C0005
0024         ?C0006:
                                           ; SOURCE LINE # 74
0024 AF00        R     MOV     R7,dat
                                           ; SOURCE LINE # 75
0026         ?C0009:
0026 22                RET     
             ; FUNCTION _SendReceiveByte (END)

             ; FUNCTION SendReceiveBit (BEGIN)
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 86
0000 C2B7              CLR     DS18XX_DQ
                                           ; SOURCE LINE # 87
0002 00                NOP     
                                           ; SOURCE LINE # 88
0003 00                NOP     
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 6   

                                           ; SOURCE LINE # 89
0004 00                NOP     
                                           ; SOURCE LINE # 90
0005 00                NOP     
                                           ; SOURCE LINE # 91
0006 A200        R     MOV     C,bdat
0008 92B7              MOV     DS18XX_DQ,C
                                           ; SOURCE LINE # 92
000A 00                NOP     
                                           ; SOURCE LINE # 93
000B 00                NOP     
                                           ; SOURCE LINE # 94
000C 00                NOP     
                                           ; SOURCE LINE # 95
000D 00                NOP     
                                           ; SOURCE LINE # 96
000E 00                NOP     
                                           ; SOURCE LINE # 97
000F 00                NOP     
                                           ; SOURCE LINE # 98
0010 A2B7              MOV     C,DS18XX_DQ
0012 9200        R     MOV     bdat,C
                                           ; SOURCE LINE # 100
;---- Variable 'dly' assigned to Register 'R7' ----
0014 E4                CLR     A
0015 FF                MOV     R7,A
0016         ?C0010:
0016 0F                INC     R7
0017 BF0CFC            CJNE    R7,#0CH,?C0010
001A         ?C0011:
                                           ; SOURCE LINE # 102
001A D2B7              SETB    DS18XX_DQ
                                           ; SOURCE LINE # 104
001C A200        R     MOV     C,bdat
                                           ; SOURCE LINE # 105
001E         ?C0013:
001E 22                RET     
             ; FUNCTION SendReceiveBit (END)

             ; FUNCTION ResetPresence (BEGIN)
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 114
0000 C2B7              CLR     DS18XX_DQ
                                           ; SOURCE LINE # 116
0002 7F46              MOV     R7,#046H
0004 120000      R     LCALL   _DelayUs
                                           ; SOURCE LINE # 117
0007 D2B7              SETB    DS18XX_DQ
                                           ; SOURCE LINE # 120
0009 7F03              MOV     R7,#03H
000B 120000      R     LCALL   _DelayUs
000E         ?C0014:
                                           ; SOURCE LINE # 121
000E 20B7FD            JB      DS18XX_DQ,?C0014
0011         ?C0015:
0011         ?C0016:
                                           ; SOURCE LINE # 122
0011 30B7FD            JNB     DS18XX_DQ,?C0016
0014         ?C0017:
                                           ; SOURCE LINE # 123
0014         ?C0018:
C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 7   

0014 22                RET     
             ; FUNCTION ResetPresence (END)

             ; FUNCTION _DelayUs (BEGIN)
                                           ; SOURCE LINE # 128
;---- Variable 'us' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0000         ?C0019:
0000 EF                MOV     A,R7
0001 600B              JZ      ?C0022
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
0003 00                NOP     
                                           ; SOURCE LINE # 133
0004 00                NOP     
                                           ; SOURCE LINE # 134
0005 00                NOP     
                                           ; SOURCE LINE # 135
0006 00                NOP     
                                           ; SOURCE LINE # 136
0007 00                NOP     
                                           ; SOURCE LINE # 137
0008 00                NOP     
                                           ; SOURCE LINE # 138
0009 00                NOP     
                                           ; SOURCE LINE # 139
000A 00                NOP     
                                           ; SOURCE LINE # 140
000B 1F                DEC     R7
000C 80F2              SJMP    ?C0019
                                           ; SOURCE LINE # 141
000E         ?C0022:
000E 22                RET     
             ; FUNCTION _DelayUs (END)

C51 COMPILER V9.00   DS18XX                                                                08/04/2016 14:12:06 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
StartConvertTemperature. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ReadTemperature. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tempL. . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  tempH. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
DS18XX_DQ. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
_DelayUs . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  us . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
ResetPresence. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
InitDS18XX . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_SendReceiveByte . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  cnt. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  rbit . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
SendReceiveBit . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  bdat . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
  dly. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
